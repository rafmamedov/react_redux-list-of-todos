{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Status.ts","utils/notificationTimer.ts","components/TodoModal/TodoModal.tsx","utils/filteredTodos.ts","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","isLoading","error","data","value","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoInfo","dispatch","isSelected","id","title","completed","className","classNames","onClick","todoActions","TodoList","length","map","TodoFilter","setQuery","onSubmit","event","preventDefault","onChange","setStatus","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoStatus","notificationTimer","callback","TodoModal","useState","setIsLoading","user","setUser","useEffect","a","userId","fetchedUser","todosActions","href","email","name","App","visibleTodos","useMemo","hasQuery","toLowerCase","includes","ACTIVE","COMPLETED","filteredTodos","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b17524ad.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'filter/SET_QUERY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: Status };\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\ntype SetIsLoadingAction = { type: 'isLoading/SET', payload: boolean };\ntype SetErrorAction = { type: 'error/SET', payload: string };\n\ntype Action = SetTodosAction | SetIsLoadingAction | SetErrorAction;\n\ntype State = {\n  isLoading: boolean;\n  error: string;\n  data: Todo[];\n};\n\nconst setTodos = (value: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: value,\n});\n\nconst setIsLoading = (value: boolean): SetIsLoadingAction => ({\n  type: 'isLoading/SET',\n  payload: value,\n});\n\nconst setError = (value: string): SetErrorAction => ({\n  type: 'error/SET',\n  payload: value,\n});\n\nconst initialState: State = {\n  isLoading: false,\n  error: '',\n  data: [],\n};\n\nexport const actions = { setTodos, setIsLoading, setError };\n\nconst todosReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return {\n        ...state,\n        data: action.payload,\n      };\n\n    case 'isLoading/SET':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case 'error/SET':\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const isSelected = currentTodo?.id === todo.id;\n\n  const { id, title, completed } = todo;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(todoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye': !isSelected,\n                'fa-eye-slash': isSelected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {!todos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <TodoInfo key={todo.id} todo={todo} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const dispatch = useAppDispatch();\n\n  const setQuery = (value: string) => dispatch(actions.setQuery(value));\n  const setStatus = (value: Status) => dispatch(actions.setStatus(value));\n\n  const handleChangeStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value as Status;\n\n    setStatus(value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          type=\"text\"\n          value={query}\n          className=\"input\"\n          data-cy=\"searchInput\"\n          placeholder=\"Search...\"\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"deleteButton\"\n              data-cy=\"clearSearchButton\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export type Status = 'all' | 'active' | 'completed';\n\nexport enum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","export const notificationTimer = <T>(\n  callback: (value: T) => void,\n  value: T,\n  delay: number,\n) => {\n  setTimeout(() => {\n    callback(value);\n  }, delay);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { useAppDispatch } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { notificationTimer } from '../../utils/notificationTimer';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { actions as todosActions } from '../../features/todos';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const fetchedUser = await getUser(todo.userId);\n\n        setUser(fetchedUser);\n      } catch (error) {\n        dispatch(todosActions.setError(`${error}`));\n        notificationTimer(todosActions.setError, '', 3000);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                aria-label=\"closeModalButton\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(todoActions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!todo.completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { Status, TodoStatus } from '../types/Status';\n\nexport const filteredTodos = (\n  todos: Todo[],\n  query: string,\n  status: Status,\n) => (\n  todos.filter(({ completed, title }) => {\n    const hasQuery = !query\n      || title.toLowerCase().includes(query.toLowerCase());\n\n    switch (status) {\n      case TodoStatus.ACTIVE:\n        return !completed && hasQuery;\n\n      case TodoStatus.COMPLETED:\n        return completed && hasQuery;\n\n      default:\n        return true && hasQuery;\n    }\n  })\n);\n","import React, { useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { actions as todosActions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { filteredTodos } from './utils/filteredTodos';\nimport { getTodos } from './api';\nimport { notificationTimer } from './utils/notificationTimer';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const error = useAppSelector(state => state.todos.error);\n  const isLoading = useAppSelector(state => state.todos.isLoading);\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const visibleTodos = useMemo(() => (\n    filteredTodos(todos.data, query, status)\n  ), [todos, query, status]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        dispatch(todosActions.setIsLoading(true));\n        const todosFromServer = await getTodos();\n\n        dispatch(todosActions.setTodos(todosFromServer));\n      } catch (err) {\n        dispatch(todosActions.setError(`${err}`));\n        notificationTimer(todosActions.setError, '', 3000);\n      } finally {\n        dispatch(todosActions.setIsLoading(false));\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            {error && (\n              <div\n                className=\"notification is-danger\"\n                data-cy=\"PostsLoadingError\"\n              >\n                {error}\n              </div>\n            )}\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}